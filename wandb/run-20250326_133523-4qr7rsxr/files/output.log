✓ wandb 초기화 성공: 4qr7rsxr
📂 문서를 로드할 디렉토리: /Users/seonwoong/PycharmProjects/langchain_graph/data
📄 발견된 파일: ['test.txt']
   확인 중: test.txt (is_file: True, endswith .txt: True)
   ✓ 파일 읽기 성공: test.txt (길이: 174 자)
🔢 로드된 문서 수: 1
문서를 1개의 청크로 분할했습니다.
기존 벡터 저장소를 로드합니다(/Users/seonwoong/PycharmProjects/langchain_graph/chroma_db)...
Ollama LLM을 초기화합니다(exaone3.5:latest)...
기본 프롬프트를 사용합니다.

프롬프트 유형: default

=== Ollama RAG 시스템에 질문하기 (종료하려면 'exit' 입력) ===
특별 명령어: 'sources' - 마지막 질문에 사용된 문서 청크와 유사도 점수 표시
Number of requested results 3 is greater than number of elements in index 1, updating n_results = 1
Number of requested results 3 is greater than number of elements in index 1, updating n_results = 1
🔄 wandb에 로깅 시도 중... (질문 #1)
✓ wandb 로깅 성공

답변: 안녕하세요! 어떻게 도와드릴까요? 😊
Traceback (most recent call last):
  File "/Users/seonwoong/PycharmProjects/langchain_graph/ollama_rag.py", line 478, in <module>
    main()
  File "/Users/seonwoong/PycharmProjects/langchain_graph/ollama_rag.py", line 343, in main
    query = input("\n질문: ")
            ^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Exception ignored in atexit callback: <function _start_and_connect_service.<locals>.teardown_atexit at 0x12fc0b600>
Traceback (most recent call last):
  File "/Users/seonwoong/PycharmProjects/langchain_graph/langchain/lib/python3.11/site-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/Users/seonwoong/PycharmProjects/langchain_graph/langchain/lib/python3.11/site-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/Users/seonwoong/PycharmProjects/langchain_graph/langchain/lib/python3.11/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/threading.py", line 1119, in join
    self._wait_for_tstate_lock()
  File "/opt/homebrew/Cellar/python@3.11/3.11.10/Frameworks/Python.framework/Versions/3.11/lib/python3.11/threading.py", line 1139, in _wait_for_tstate_lock
    if lock.acquire(block, timeout):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt:
